[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "rusticai-core"
version = "0.1.0"
description = "Rustic AIâ€™s modular, agentic AI framework for building human-centered, multi-agent workflows"
authors = ["Dragonscale Industries Inc. <dev@dragonscale.ai>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://www.rustic.ai/"
repository = "https://github.com/rustic-ai/rustic-ai"
packages = [{ include = "rustic_ai", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
pydantic = "^2.10.6"
shortuuid = "^1.0.13"
types-python-dateutil = "^2.9.0.20241003"
pyyaml = "^6.0.1"
jsonata-python = "^0.5.2"
fsspec = "^2024.12.0"
jsonpath-ng = "^1.7.0"
json-merge-patch = "^0.2"
sqlmodel = "^0.0.22"
types-pyyaml = "^6.0.12.20241230"
aiohttp = "^3.11.14"
jsonpatch = "^1.33"
sympy = "^1.13.3"
python-dateutil = "^2.9.0.post0"
opentelemetry-api = "^1.31.1"
chevron = "^0.14.0"
numpy = "<2.0.0"
apscheduler = "^3.11.0"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
black = { version = "^24.2.0", extras = ["jupyter"] }
flake8 = "^7.1.2"
tox = "^4.24.1"
isort = "^6.0.0"
mypy = "^1.15.0"

[tool.poetry.extras]
test = ["pytest"]

[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | resources/*
)/
'''

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
check_untyped_defs = true
plugins = "pydantic.mypy"
explicit_package_bases = true

[tool.isort]
profile = "black"
force_sort_within_sections = true # For the sorting order issues
lines_between_sections = 1 # For the newline issue
known_third_party = ["pydantic"]
known_first_party = ["rustic_ai.core"]
known_local_folder = ["core"]
